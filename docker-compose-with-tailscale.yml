version: '3.8'

services:
  bb_meilisearch:
    image: getmeili/meilisearch:v1.9
    env_file: .env
    # networks:
    #   - bb-network
    restart: unless-stopped
    depends_on:
      bb_setup:
        condition: service_completed_successfully
    ports:
      - '7700:7700'
    healthcheck:
      test: wget --no-verbose --spider http://localhost:7700/health
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
  bb_mongodb:
    image: mongo:7-jammy
    ports:
      - '27017:27017'
    depends_on:
      bb_meilisearch:
        condition: service_healthy
    volumes:
      - mongodata:/data/db
      - ./:/app
    # networks:
    #   - bb-network
    env_file: .env
    restart: unless-stopped
    healthcheck:
      # test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      test: cd /app && scripts/export.sh
      interval: 10m
      retries: 5
      start_period: 30s
      timeout: 10s

  bb_tailscale:
    image: tailscale/tailscale:latest
    # container_name: bb_tailscale
    # hostname must match the name of your auth key
    hostname: <YOUR AUTH KEY NAME>
    environment:
      - TS_AUTHKEY=<YOUR TAILSCALE AUTH KEY>
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_SERVE_CONFIG=/app/docker/tailscale/config.json
    volumes:
      - ${PWD}/bb_tailscale/state:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
      - ./:/app
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped

  bb_setup:
    image: golang:1.22.5
    volumes:
        - ./:/app
    command: ["/app/docker/handle_required_setup.sh"]

  bb_rails:
    image: ruby:3.3.4
    environment:
      - BUNDLE_PATH=/app/gems
    network_mode: service:bb_tailscale
    depends_on:
      bb_mongodb:
        condition: service_healthy
      bb_meilisearch:
        condition: service_healthy
      bb_tailscale:
        condition: service_started
    volumes:
        - ./:/app
    command: ["/app/docker/serve"]


volumes:
  mongodata:


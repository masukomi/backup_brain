#!/usr/bin/env bash

ESCAPE=$(printf "\033")
RED="${ESCAPE}[91m"
GREEN="${ESCAPE}[92m"
YELLOW="${ESCAPE}[33m"
NOCOLOR="${ESCAPE}[0m"


# Exit on error
set -e

trap ctrl_c INT
trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM EXIT

function ctrl_c() {
 echo "Shutting down"
 echo "Killing Rails Server (puma)â€¦"
 kill $(cat ./tmp/pids/server.pid)

 source 'bin/kill_delayed_jobs'
 kill_delayed_jobs

 kill -- -$$
}


# Make sure you've defined a host name
hostname=$(cat .env | grep "^HOST_NAME" | sed -e "s/HOST_NAME=//" -e "s/#.*//")
if [ -z "$hostname" ]; then
  echo $RED"HOST_NAME is not set"$NOCOLOR
  echo "Set it in the .env file"
  echo "By default you probably want to set it to 'localhost'"
  echo "ex: HOST_NAME=localhost"
  echo "Check the README ways to give it a better name."
  exit 78 # EX_CONFIG (78)  Something was found in an unconfigured or misconfigured state.
else
  echo $GREEN"HOST_NAME is set to \"$hostname\""$NOCOLOR
  echo "If this is not correct please update the .env file"
  echo "It will effect your ability to log in."
fi
ssh_host=$(cat .env | grep "^HOST_USES_SSH" | sed -e "s/HOST_USES_SSH=//" -e "s/#.*//")
if [ -z "$ssh_host" ]; then
  ssh_host="false"
fi

# Make sure you've defined a port (defaults in .env.sample is 3334)
port=$(cat .env | grep "^PORT" | sed -e "s/PORT=//" -e "s/#.*//")
if [ -z "$port" ]; then
  echo $RED"PORT is not set"$NOCOLOR
  echo "Set it in the .env file"
  echo "By default you probably want to set it to 3334"
  echo "ex: PORT=3334"
  echo "Lots of development tools use 3000, so this 3334 won't interfere with them."
  exit 78 # EX_CONFIG (78)  Something was found in an unconfigured or misconfigured state.
else
  echo $GREEN"PORT is set to \"$port\""$NOCOLOR
  echo "If this is not correct please update the .env file"
fi


search_enabled=$(cat .env | grep "^SEARCH_ENABLED" | sed -e "s/SEARCH_ENABLED=//" -e "s/#.*//")

if [ -z "$search_enabled" ]; then
  echo $RED"SEARCH_ENABLED is not set"$NOCOLOR
  echo "Search will be unavailable"
  echo "Set it to true in the .env file to enable search"
  echo "ex: SEARCH_ENABLED=true"

elif [ "$search_enabled" == "true" ]; then

  set +e # don't exit on error because meilisearch may not be running
  # Test if meilisearch is running
  pgrep -x meilisearch > /dev/null

  meili_status=$?

  #Start it if it isn't.
  if [ $meili_status -ne 0 ]; then
    echo $GREEN"booting Meilisearch too..."$NOCOLOR
    api_key=$(cat .env | grep "^MEILI_MASTER_KEY" | sed -e "s/MEILI_MASTER_KEY=//" -e "s/#.*//")
    if [ -z "$api_key" ]; then
      echo $RED"MEILI_MASTER_KEY is not set"$NOCOLOR
      echo "Start it without one to have one autogenerated, copy the key it shows."
      echo "Then store it in the .env file where noted"
      echo "start it by running `meilisearch` with no arguments"
      exit 78 # EX_CONFIG (78)  Something was found in an unconfigured or misconfigured state.
    fi
    meilisearch --master-key "$api_key"  > /dev/null 2>&1 &
    meilisearch_status=$?
    if [ $meilisearch_status -ne 0 ]; then
      echo $RED"Meilisearch failed to start"$NOCOLOR
      echo $RED"Search will be unavailable"$NOCOLOR
      echo "Check the output above for more information"
    fi
    disown
  else
    echo $GREEN"Meilisearch is already running"$NOCOLOR
  fi

  set -e
else
  echo $YELLOW"Search is disabled via .env"$NOCOLOR
fi

worker_count=$(cat .env | grep "^DELAYED_JOB_WORKERS" | sed -e "s/DELAYED_JOB_WORKERS=//" -e "s/#.*//")
if [ -z "$worker_count" ]; then
  echo $YELLOW"DELAYED_JOB_WORKERS is not set"$NOCOLOR
  echo "Will use 2 workers by default."
  echo "Configure this as an integer in your .env file"
  worker_count=2
else
  echo $GREEN"DELAYED_JOB_WORKERS is set to \"$worker_count\""$NOCOLOR
  echo "If this is not correct please update the .env file"
fi

echo "Starting $worker_count Delayed Job Workers"
# Start the Delayed Job Workers
bin/delayed_job -n $worker_count start & disown


if [ "$ssh_host" == "false" ]; then
  visitable_url="http://$hostname:$port"
else
  visitable_url="https://$hostname"
fi
echo $GREEN"VISIT YOUR BACKUP BRAIN AT $visitable_url"$NOCOLOR
# Start Rails
# bundle exec rails server -p $port -u puma
bundle exec rails server -u puma





#TODO nothing in delayed_job_pids
#TODO maybe background the rails server too?
